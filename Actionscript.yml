github
/
docs
Public
Fork your own copy of github/docs
Code
"Signs-in": "Octocokit":,
$Home Privacy Policy Rates & Disclosures
Double Your Line® Secured Mastercard®
STEP 1 Personal Information
Fields marked with * are required.

Merrick Bank Secured Credit Card, Mastercard, Light Pink
First Name*
ZACHRY
MI
T
Last Name*
WOOD
Suffix
III
Addr​ess* (e.g., 1234 NW Any Stre​et, Ap​t 3B, Any To​wn, NY 01234)
3126 Hudnall St Apt 108F, Dallas TX 75235-8907
Email You must enter a valid email address.
'Zachry'Tyler'Wood'@'Administrator'@'.it'.git
Confirm Email
'Zachry'Tyler'Wood'@'Administrator'@'.it'.git
At least one phone number is required* 
Mobile Phone
(000) 000-0000
Home Phone
(000) 000-0000
Work Phone
(000) 000-0000
By providing this information, I give my express written consent for Merrick Bank and its service providers to contact me, by phone or email, in connection with my Account. This may include the use of auto-dialers and other automated means.
Date of Birth*
Month

Day

Year

Social Security Number*
000-00-0000
Mother's Maiden Name*
Continue to the next step
STEP 2 Financial Information
STEP 3 E-Sign Disclosure
STEP 4 Summary of Terms
STEP 5 Pay Deposit
STEP 6 Review
© 2023 Merrick Bank. All Rights Reserved. Member FDIC.
FICO is a registered trademark of Fair Isaac Corporation in the United States and other countries.
Follow Us
@mowjoejoejoejoemowjoejoejoejoe committed 3 minutes ago 
commit 541327d1aed8ac0c17e4ce40572e4c51945f13f9
 87  
LICENSE → ...of command line/roadmap.md/dustdevils.yml
@@ -1,4 +1,89 @@
Attribution 4.0 International	From bb62d7b889871c87fc7e075ef37ec56c823c5836 Mon Sep 17 00:00:00 2001
From: Martin Lopes <54248166+martin389@users.noreply.github.com>
Date: Mon, 7 Dec 2020 15:42:20 +1000
Subject: [PATCH 1/2] Added initial draft of reference table
 ...grating-from-travis-ci-to-github-actions.md | 18 ++++++++++++++++++
 .../workflow-syntax-for-github-actions.md      |  4 +++-
 .../github-actions/run_number_description.md   |  2 +-
 3 files changed, 22 insertions(+), 2 deletions(-
diff --git a/content/actions/learn-github-actions/migrating-from-travis-ci-to-github-actions.md b/content/actions/learn-github-actions/migrating-from-travis-ci-to-github-actions.md
index ff321c94728..c13d67a5b51 100644
--- a/content/actions/learn-github-actions/migrating-from-travis-ci-to-github-actions.md
+++ b/content/actions/learn-github-actions/migrating-from-travis-ci-to-github-actions.md
@@ -39,6 +39,24 @@ Travis CI lets you set environment variables and share them between stages. Simi

 Travis CI and {% data variables.product.prodname_actions %} both include default environment variables that you can use in your YAML files. For {% data variables.product.prodname_actions %}, you can see these listed in "[Default environment variables](/actions/reference/environment-variables#default-environment-variables)."

+To help you get started, this table maps some of the common Travis CI environment variables to similar {% data variables.product.prodname_actions %} ones:
+
+| Travis CI | {% data variables.product.prodname_actions %}| {% data variables.product.prodname_actions %} description |
+| ---------------------|------------ |------------ |
+| `CI` | [`CI`](/actions/reference/environment-variables#default-environment-variables) | Allows your software to identify that it is running within a CI workflow. Always set to `true`.|
+| `TRAVIS` | [`GITHUB_ACTIONS`](/actions/reference/environment-variables#default-environment-variables) | Use `GITHUB_ACTIONS` to identify whether tests are being run locally or by {% data variables.product.prodname_actions %}. Always set to `true` when {% data variables.product.prodname_actions %} is running the workflow.|
+| `TRAVIS_BRANCH` | [`github.head_ref`](/actions/reference/context-and-expression-syntax-for-github-actions#github-context) or [`github.ref`](/actions/reference/context-and-expression-syntax-for-github-actions#github-context) | Use `github.ref` to identify the branch or tag ref that triggered the workflow run. For example, `refs/heads/<branch_name>` or `refs/tags/<tag_name>`. Alternatvely, `github.head_ref` is the source branch of the pull request in a workflow run; this property is only available when the workflow event trigger is a `pull_request`.  |
+| `TRAVIS_BUILD_DIR` | [`github.workspace`](/actions/reference/context-and-expression-syntax-for-github-actions#github-context) | Returns the default working directory for steps, and the default location of your repository when using the [`checkout`](https://github.com/actions/checkout) action. |
+| `TRAVIS_BUILD_NUMBER` | [`GITHUB_RUN_NUMBER`](/actions/reference/environment-variables#default-environment-variables) | {% data reusables.github-actions.run_number_description %} |
+| `TRAVIS_COMMIT` | [`GITHUB_SHA`](/actions/reference/environment-variables#default-environment-variables) | Returns the SHA of the commit that triggered the workflow. |
+| `TRAVIS_EVENT_TYPE` | [`github.event_name`](/actions/reference/context-and-expression-syntax-for-github-actions#github-context) |  The name of the webhook event that triggered the workflow. For example, `pull_request` or `push`. |
+| `TRAVIS_JOB_ID` | [`github.job`](/actions/reference/context-and-expression-syntax-for-github-actions#github-context) | The [`job_id`](/actions/reference/workflow-syntax-for-github-actions#jobsjob_id) of the current job. |
+| `TRAVIS_OS_NAME` | [`runner.os`](/actions/reference/context-and-expression-syntax-for-github-actions#runner-context) | The operating system of the runner executing the job. Possible values are `Linux`, `Windows`, or `macOS`. |
+| `TRAVIS_PULL_REQUEST` | [`github.event.pull_request.number`](/developers/webhooks-and-events/webhook-events-and-payloads#pull_request) | The pull request number. This property is only available when the workflow event trigger is a `pull_request`. |
+| `TRAVIS_REPO_SLUG` | [`GITHUB_REPOSITORY`](/actions/reference/environment-variables#default-environment-variables) | The owner and repository name. For example, `octocat/Hello-World`. |
+| `TRAVIS_TEST_RESULT` | [`job.status`](/actions/reference/context-and-expression-syntax-for-github-actions#job-context) | The current status of the job. Possible values are `success`, `failure`, or `cancelled`. |
+| `USER` | [`GITHUB_ACTOR`](/actions/reference/environment-variables#default-environment-variables) | The name of the person or app that initiated the workflow. For example, `octocat`. |
+
 #### Parallel job processing

 Travis CI can use `stages` to run jobs in parallel. Similarly, {% data variables.product.prodname_actions %} runs `jobs` in parallel. For more information, see "[Creating dependent jobs](/actions/learn-github-actions/managing-complex-workflows#creating-dependent-jobs)."
diff --git a/content/actions/reference/workflow-syntax-for-github-actions.md b/content/actions/reference/workflow-syntax-for-github-actions.md
index dcfa3af305f..b46c4db515f 100644
--- a/content/actions/reference/workflow-syntax-for-github-actions.md
+++ b/content/actions/reference/workflow-syntax-for-github-actions.md
@@ -231,10 +231,12 @@ If you need to find the unique identifier of a job running in a workflow run, yo

 ### `jobs.<job_id>`

-Each job must have an id to associate with the job. The key `job_id` is a string and its value is a map of the job's configuration data. You must replace `<job_id>` with a string that is unique to the `jobs` object. The `<job_id>` must start with a letter or `_` and contain only alphanumeric characters, `-`, or `_`.
+You must create an identifier for each job by giving it a unique name. The key `job_id` is a string and its value is a map of the job's configuration data. You must replace `<job_id>` with a string that is unique to the `jobs` object. The `<job_id>` must start with a letter or `_` and contain only alphanumeric characters, `-`, or `_`.

 #### Example
+In this example, two jobs have been created, and their `job_id` values are `my_first_job` and `my_second_job`.
+
 ```yaml
 jobs
   my_first_job:
diff --git a/data/reusables/github-actions/run_number_description.md b/data/reusables/github-actions/run_number_description.md
index 7f4c94a6224..748c350059c 100644
--- a/data/reusables/github-actions/run_number_description.md
+++ b/data/reusables/github-actions/run_number_description.md
@@ -1 +1 @@
-A unique number for each run of a particular workflow in a repository. This number begins at 1 for the workflow's first run, and increments with each new run. This number does not change if you re-run the workflow run.
+A unique number for each run of a particular workflow in a repository. This number begins at `1` for the workflow's first run, and increments with each new run. This number does not change if you re-run the workflow run.
From 2f9ec0c54b590b34052e648358b1a09f70c4b4ae Mon Sep 17 00:00:00 2001
From: Martin Lopes <54248166+martin389@users.noreply.github.com>
Date: Mon, 7 Dec 2020 16:05:02 +1000
Subject: [PATCH 2/2] Small edit
 .../migrating-from-travis-ci-to-github-actions.md               | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
diff --git a/content/actions/learn-github-actions/migrating-from-travis-ci-to-github-actions.md b/content/actions/learn-github-actions/migrating-from-travis-ci-to-github-actions.md
index c13d67a5b51..2602fbad454 100644
--- a/content/actions/learn-github-actions/migrating-from-travis-ci-to-github-actions.md
+++ b/content/actions/learn-github-actions/migrating-from-travis-ci-to-github-actions.md
@@ -39,7 +39,7 @@ Travis CI lets you set environment variables and share them between stages. Simi

 Travis CI and {% data variables.product.prodname_actions %} both include default environment variables that you can use in your YAML files. For {% data variables.product.prodname_actions %}, you can see these listed in "[Default environment variables](/actions/reference/environment-variables#default-environment-variables)."

-To help you get started, this table maps some of the common Travis CI environment variables to similar {% data variables.product.prodname_actions %} ones:
+To help you get started, this table maps some of the common Travis CI variables to {% data variables.product.prodname_actions %} variables with similar functionality:

 | Travis CI | {% data variables.product.prodname_actions %}| {% data variables.product.prodname_actions %} description |
 | ---------------------|------------ |------------ |
 Attribution 4.0 International to your accounts and resources on GitHub and the level of access each person has.Runs-on:'Run'':
About access permissions on GitHubRuns-on:'Run'':
To perform any actions on GitHub, such as creating a pull request in a repository or changing an organization's billing settings, a person must have sufficient access to the relevant account or resource. This access is controlled by permissions. A permission is the ability to perform a specific action. For example, the ability to delete an issue is a permission. A role is a set of permissions you can assign to individuals or teams.Runs-on:'Run'':
Roles work differently for different types of accounts. For more information about accounts, see "Types of GitHub accounts."
Personal accountsRuns-on:'Run'':
A repository owned by a personal account has two permission levels: the repository owner and collaborators. For more information, see "Permission levels for a personal account repository."
Organization accountsRuns-on:'Run'':
Organization members can have owner, billing manager, or member roles. Owners have complete administrative access to your organization,Runs-on:'run::/BEGIN::/GLOW4::/Runs-on::/run::/ON-on :
-on :while billing managers can manage billing settings. Member is the default role for everyone else. You can manage access permissions for :Runs-on:'Run'': Runs-on:'Run'':''
'multiple members at a time with teams. For more information, see:Runs-on:'Run'':
"Roles in an organization"Runs-on:'Run'':
"Project board permissions for an organization"Runs-on:'Run'':
"Repository roles for an organization"Runs-on:'Run'':
"About teams"Runs-on:'Run'':
Enterprise accountsRuns-on:'Run'':
Enterprise accounts are available with GitHub Enterprise Cloud and GitHub Enterprise Server. For more information, see "About enterprise accounts" in the GitHub Enterprise Cloud documentation.
For more information about permissions for enterprise accounts, see the GitHub Enterprise Cloud documentation.
"Types of GitHub accounts"
<!-- omit in toc --> 
This repository contains the documentation website code and Markdown source files for [docs.github.com](https://docs.github.com).
GitHub's Docs team works on pre-production content in a private repo that regularly syncs with this public repo.
Use the table of contents icon <img src="./assets/images/table-of-contents.png" width="25" height="25" /> on the top left corner of this document to get to a specific section of this guide quickly.
Contributing..., :
# bitore.sig'@ci/CI'@contributing.md/CONTRIBUTING.md) for detailed instructions on how to get started with our project. 
We accept different [types of contributions](https://github.com/github/docs/blob/main/contributing/types-of-contributions.md), including some that don't require you to write a single line of code.
On the GitHub Docs site, you can click the make a contribution button at the bottom of the page to open a pull request for quick fixes like typos, updates, or link fixes.
<img src="./assets/images/contribution_cta.png" width="400">
For more complex contributions, you can open an issue using the most appropriate [issue template](https://github.com/github/docs/issues/new/choose) to describe the changes you'd like to see.
If you're looking for a way to contribute, you can scan through our [existing issues](https://github.com/github/docs/issues) for something to work on. When ready, check out [Getting Started with Contributing](/CONTRIBUTING.md) for detailed instructions.
### Join us in discussions 
We use GitHub Discussions to talk about all sorts of topics related to documentation and this site. For example: if you'd like help troubleshooting a PR, have a great new idea, or want to share something amazing you've learned in our docs, join us in the [discussions](https://github.com/github/docs/discussions).
### And that's it!
If you're having trouble with your GitHub account, contact [Support](https://support.github.com/contact).
That's how you can easily become a member of the GitHub Documentation community. :sparkles:
## READMEs
In addition to the README you're reading right now, this repo includes other READMEs that describe the purpose of each subdirectory in more detail:
- [content/README.md](content/assets, content, and data folders are licensed under a [CC-BY license](LICENSE).
All other code in this repository is licensed under the [MIT license](LICENSE-CODE).
When using the GitHub logos, be sure to follow the [GitHub logo guidelines](https://github.com/logos).
## Thanks :purple_heart:
Thanks for all your contributions and efforts towards improving the GitHub documentation. We thank you for being part of our :sparkles: community :sparkles:!
