name: Sync search Elasticsearch

# **What it does**: It scrapes the whole site and dumps the records in a
#                   temp directory. Then it indexes that into Elasticsearch.
# **Why we have it**: We want our search indexes kept up to date.
# **Who does it impact**: Anyone using search on docs.

on:
  workflow_dispatch:
    inputs:
      version:
        description: "Version to exclusively generate the search index for. E.g. 'dotcom', 'ghes-3.7', 'ghae'"
        required: false
        default: ''
      languages:
        description: "Comma separated languages. E.g. 'en,ja, es' (defaults to all)"
        required: false
        default: ''
  schedule:
    - cron: '20 */24 * * *' # Run every 24 hours at 20 minutes past the hour
  workflow_run:
    workflows: ['Azure Production - Build and Deploy']
    types:
      - completed

permissions:
  contents: read

# This allows a subsequently queued workflow run to cancel previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.head_ref }} ${{ github.event_name }}'
  cancel-in-progress: true

env:
  ELASTICSEARCH_URL: ${{ secrets.ELASTICSEARCH_URL }}
  # Since we'll run in NODE_ENV=production, we need to be explicit that
  # we don't want Hydro configured.
  HYDRO_ENDPOINT: ''
  HYDRO_SECRET: ''

jobs:
  figureOutMatrix:
    if: ${{ github.repository == 'github/docs-internal' }}
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.result }}
    steps:
      - uses: actions/github-script@e69ef5462fd455e02edcaf4dd7708eda96b9eda0 # v7.0.0
        id: set-matrix
        with:
          script: |
            // Edit this list for the definitive list of languages
            // (other than English) we want to index in Elasticsearch.
            const allNonEnglish = ["zh", "es", "pt", "ru", "ja", "fr", "de", "ko"]
            const allPossible = ["en", ...allNonEnglish]

            if (context.eventName === "workflow_run") {
              if (context.payload.workflow_run.conclusion === "success") {
                return ["en"]
              }
              throw new Error(`It was a workflow_run but not success ('${context.payload.workflow_run.conclusion}')`)
            }

            if (context.eventName === "workflow_dispatch") {
              if (context.payload.inputs.languages) {
                const clean = context.payload.inputs.languages.split(',').map(x => x.trim()).filter(Boolean)
                const notRecognized = clean.find(x => !allPossible.includes(x))
                if (notRecognized) {
                  throw new Error(`'${notRecognized}' is not a recognized language code`)
                }
                return clean
              }
              return allPossible
            }

            if (context.eventName === "schedule") {
              return allNonEnglish
            }

            console.log(context)
            throw new Error(`Unable figure out what languages to run (${context.eventName})`)

      - name: Debug output
        run: echo "${{ steps.set-matrix.outputs.result }}"

      - name: Check out repo
        if: ${{ failure() && github.event_name != 'workflow_dispatch' }}
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0

      - uses: ./.github/actions/slack-alert
        if: ${{ failure() && github.event_name != 'workflow_dispatch' }}
        with:
          slack_channel_id: ${{ secrets.DOCS_ALERTS_SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_DOCS_BOT_TOKEN }}
  updateElasticsearchIndexes:
    needs: figureOutMatrix
    name: Update indexes
    if: ${{ github.repository == 'github/docs-internal' }}
    runs-on: ubuntu-20.04-xl
    strategy:
      fail-fast: false
      # When it's only English (i.e. a simple array of ['en']), this value
      # does not matter. If it's ALL the languages, then we know we can
      # be patient because it's a daily scheduled run and it's run by bots
      # while humans are asleep. So there's no rush and no need to finish
      # the whole job fast.
      # As of June 2023, it takes about 10+ minutes to index one whole
      # language and we have 8 non-English languages.
      max-parallel: 3
      matrix:
        language: ${{ fromJSON(needs.figureOutMatrix.outputs.matrix) }}
    steps:
      - name: Check out repo
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0

      - name: Clone docs-internal.popular-pages
        uses: actions/checkout@3df4ab11eba7bda6032a0b82a6bb43b11571feac # v4.0.0
        with:
          repository: github/docs-internal.popular-pages
          # This works because user `docs-bot` has read access to that private repo.
          token: ${{ secrets.DOCS_BOT_PAT_READPUBLICKEY }}
          path: popular-pages

      - name: Clone all translations
        if: ${{ matrix.language != 'en' }}
        uses: ./.github/actions/clone-translations
        with:
          token: ${{ secrets.DOCS_BOT_PAT_READPUBLICKEY }}

      - uses: ./.github/actions/node-npm-setup

      - uses: ./.github/actions/cache-nextjs

      - name: Run build scripts
        run: npm run build

      - name: Start the server in the background
        env:
          ENABLE_DEV_LOGGING: false
        run: |
          npm run sync-search-server > /tmp/stdout.log 2> /tmp/stderr.log &

          # first sleep to give it a chance to start
          sleep 6
          curl --retry-connrefused --retry 4 -I http://localhost:4002/

      - if: ${{ failure() }}
        name: Debug server outputs on errors
        run: |
          echo "____STDOUT____"
          cat /tmp/stdout.log
          echo "____STDERR____"
          cat /tmp/stderr.log

      - name: Scrape records into a temp directory
        env:
          # If a reusable, or anything in the `data/*` directory is deleted
          # you might get a
          #
          #   RenderError: Can't find the key 'site.data.reusables...' in the scope
          #
          # But that'll get fixed in the next translation pipeline. For now,
          # let's just accept an empty string instead.
          THROW_ON_EMPTY: false

          # Note that by default, this is '' (empty string) and that means
          # the same as not set within the script.
          VERSION: ${{ inputs.version }}

          # The sync-search-index recognizes this env var if you don't
          # use the `--popular-pags <PATH>` option.
          POPULAR_PAGES_JSON: popular-pages/records/popular-pages.json

        run: |
          mkdir /tmp/records
          npm run sync-search-indices -- /tmp/records \
            --language ${{ matrix.language }}

          ls -lh /tmp/records

      - name: Check that Elasticsearch is accessible
        run: |
          curl --fail --retry-connrefused --retry 5 -I ${{ env.ELASTICSEARCH_URL }}

      - name: Index into Elasticsearch
        env:
          # Must match what we used when scraping (npm run sync-search-indices)
          # otherwise the script will seek other versions from disk that might
          # not exist.
          VERSION: ${{ inputs.version }}
        run: |
          npm run index-elasticsearch -- /tmp/records \
            --language ${{ matrix.language }} \
            --stagger-seconds 5 \
            --retries 5

      - name: Check created indexes and aliases
        run: |
          # Not using `--fail` here because I've observed that it can fail
          # with a rather cryptic 404 error when it should, if anything, be
          # a 200 OK with a list of no indices.
          curl --retry-connrefused --retry 5 ${{ env.ELASTICSEARCH_URL }}/_cat/indices?v
          curl --retry-connrefused --retry 5 ${{ env.ELASTICSEARCH_URL }}/_cat/indices?v

      - name: Purge Fastly edge cache
        env:
          FASTLY_TOKEN: ${{ secrets.FASTLY_TOKEN }}
          FASTLY_SERVICE_ID: ${{ secrets.FASTLY_SERVICE_ID }}
          FASTLY_SURROGATE_KEY: api-search:${{ matrix.language }}
        run: src/workflows/purge-fastly-edge-cache.js

      - uses: ./.github/actions/slack-alert
        if: ${{ failure() && github.event_name != 'workflow_dispatch' }}
        with:
          slack_channel_id: ${{ secrets.DOCS_ALERTS_SLACK_CHANNEL_ID }}
          slack_token: ${{ secrets.SLACK_DOCS_BOT_TOKEN }}
           [![Sync search Elasticsearch](https://github.com/github/docs/actions/workflows/sync-search-elasticsearch.yml/badge.svg?branch=dependabot%2Fgithub_actions%2Factions%2Fcache-4.0.0&event=create)](https://github.com/github/docs/actions/workflows/sync-search-elasticsearch.yml)
                       - name: Pangea Vault Secrets Action
  # You may pin to the exact commit or the version.
  # uses: pangeacyber/pangea-github-action-vault@6bd58b585b52c76307edc6c895dbec719c3e6668
  uses: pangeacyber/pangea-github-action-vault@1.0.2
  with:
    # Job command to run (ex - npm run dev)
    pangea_token: # optional
    # Pangea Domain
    pangea_domain: # optional, default is aws.us.pangea.cloud
    # Pangea folder to pull secrets from
    pangea_default_folder: # optional
    # Github personal access token
    github_token: 
                      - name: Deploy to Algorithmia
  # You may pin to the exact commit or the version.
  # uses: algorithmiaio/algorithmia-modeldeployment-action@14310c6bd07101452e0a1bc435aa2e306e62aa30
  uses: algorithmiaio/algorithmia-modeldeployment-action@1.1.0
  with:
    # Algorithmia API Key, used when uploading the model file
    algorithmia_api_key: 
    # Algorithmia Username, used as Git Commit Username and as part of default model upload path
    algorithmia_username: 
    # Algorithmia Email, used as Git Commit Email
    algorithmia_email: # optional, default is githubactions@placeholder.email
    # Algorithmia Password. Only required if the algorithm is hosted on Algorithmia.
    algorithmia_password: # optional
    # Github username owning the algorithm repository, used to clone the algorithm repository. Only required if the algorithm is hosted on Github.
    github_username: # optional
    # Github Personal Access Token, used to clone the algorithm repository. Only required if the algorithm is hosted on Github.
    github_pat: # optional
    # Algorithmia Algorithm name
    algorithmia_algoname: 
    # Algorithmia data collection name to upload the model file
    algorithmia_uploadpath: # default is data://$ALGORITHMIA_USERNAME/$ALGORITHMIA_ALGONAME
    # Path of the model file to be uploaded to Algorithmia
    model_path: # default is model.pkl
    # Path of the notebook to be executed by this action
    notebook_path: # optional, default is model_training.ipynb
    # Git host for the Algorithmia algorithm repository. Change to git.algorithmia.com if the algorithm is hosted on Algorithmia Marketplace or git.YOUR_DOMAIN for enterprise installations.
    git_host: # optional, default is github.com
    # API endpoint Algorithmia installation, for enterprise customers.
    algorithmia_api: # optional, default is https://api.algorithmia.com
                - name: Setup Java JDK
  uses: actions/setup-java@v4.0.0
  with:
    # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
    java-version: # optional
    # The path to the `.java-version` file. See examples of supported syntax in README file
    java-version-file: # optional
    # Java distribution. See the list of supported distributions in README file
    distribution: 
    # The package type (jdk, jre, jdk+fx, jre+fx)
    java-package: # optional, default is jdk
    # The architecture of the package (defaults to the action runner's architecture)
    architecture: # optional
    # Path to where the compressed JDK is located
    jdkFile: # optional
    # Set this option if you want the action to check for the latest available version that satisfies the version spec
    check-latest: # optional
    # ID of the distributionManagement repository in the pom.xml file. Default is `github`
    server-id: # optional, default is github
    # Environment variable name for the username for authentication to the Apache Maven repository. Default is $GITHUB_ACTOR
    server-username: # optional, default is GITHUB_ACTOR
    # Environment variable name for password or token for authentication to the Apache Maven repository. Default is $GITHUB_TOKEN
    server-password: # optional, default is GITHUB_TOKEN
    # Path to where the settings.xml file will be written. Default is ~/.m2.
    settings-path: # optional
    # Overwrite the settings.xml file if it exists. Default is "true".
    overwrite-settings: # optional, default is true
    # GPG private key to import. Default is empty string.
    gpg-private-key: # optional
    # Environment variable name for the GPG private key passphrase. Default is $GPG_PASSPHRASE.
    gpg-passphrase: # optional
    # Name of the build platform to cache dependencies. It can be "maven", "gradle" or "sbt".
    cache: # optional
    # The path to a dependency file: pom.xml, build.gradle, build.sbt, etc. This option can be used with the `cache` option. If this option is omitted, the action searches for the dependency file in the entire repository. This option supports wildcards and a list of file names for caching multiple dependencies.
    cache-dependency-path: # optional
    # Workaround to pass job status to post job step. This variable is not intended for manual setting
    job-status: # optional, default is ${{ job.status }}
    # The token used to authenticate when fetching version manifests hosted on github.com, such as for the Microsoft Build of OpenJDK. When running this action on github.com, the default value is sufficient. When running on GHES, you can pass a personal access token for github.com if you are experiencing rate limiting.
    token: # optional, default is ${{ github.server_url == 'https://github.com' && github.token || '' }}
    # Name of Maven Toolchain ID if the default name of "${distribution}_${java-version}" is not wanted. See examples of supported syntax in Advanced Usage file
    mvn-toolchain-id: # optional
    # Name of Maven Toolchain Vendor if the default name of "${distribution}" is not wanted. See examples of supported syntax in Advanced Usage file
    mvn-toolchain-vendor: # optional
          run
          
