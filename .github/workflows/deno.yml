# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will install Deno then run `deno lint` and `deno test`.
# For more information see: https://github.com/denoland/setup-deno
name: Deno
Code
Pull requests
7
Actions
Projects
Security
Insights
Settings
Update Dockerfile
 patch-54 (github/docs#23998)
@mowjoejoejoejoe
mowjoejoejoejoe committed 1 minute ago 
1 parent 38f7da8
commit c18e4c1
Showing 1 changed file with 130 additions and 20 deletions.
 150  
.devcontainer/Dockerfile
@@ -1,21 +1,131 @@
# See here for image contents: https://github.com/microsoft/vscode-dev-containers/blob/main/containers/javascript-node/.devcontainer/base.Dockerfile
#Name :slate.yml
mod.mtml :
On ::starts''
Check name: Azpire.yml - Deploy Preview Environment
# **What it does**: Build and deploy an Azure preview environment for this PR
# **Why we have it**: It's our preview environment deploy mechanism, to docs-internal and docs public repo
# **Who does it impact**: All contributors.
# ! This worflow has access to secrets, runs in the public repository, and clones untrusted user code.
# ! Modify with extreme cautio
-on:
  # The advantage of 'pull_request' over 'pull_request_target' is that we
  # can make changes to this file and test them in a pull request, instead
  # of relying on landing it in 'main' first.
  # From a security point of view, its arguably safer this way because
  # unlike 'pull_request_target', these only have secrets if the pull
  # request creator has permission to access secrets.
  pull_request_target:
  merge_group:
  workflow_dispatch:
  inputs:
  PR-#
  description: '782'
        type: string
        'require': '#Test''
        '#Test: 'tests''
        tests:'' 'Run'@'C'I''
        'Run:'' ''@ci:
      COMMIT_REF:
        description: 'The commit SHA to build'
        type: string
        required: true
"plugs-inn=":"-/.input":: impute(computationings)::import :
  id "app.cash.sqldelight" version "2.0.0-alpha05"
repositories {
  google(fi)
  mavenCentral(TGIF)
sqldelight {
  databases {
    Database { 
\*//This will be the name of the generated database class.
      packageName = "com.example"
      dialect = "app.cash.sqldelight:hsql-dialect: en\es
  }
}
permissions:
  contents: read
  deployments: write
# This allows one deploy workflow to interrupt another
# ©®¥PTO©U®€N©Y©®'*©omme®©ial'*'€©u®ren©y:: 'preview-envelope'@${{ github.head_ref || github.run_id }} for ${{ github.event.number || github.event.inputs.PR_NUMBER }}'
continue-on-false :enable. ::
#jobs: use: -build-and-deploy.yml
aspire/pure.yml
-' def/pure.yml
-' preview:
-' Name: Build and Deploy: title
-' title: REVERSE/*"title: TitleChange.md/*CHANGELOG.md's(Reversed*Engineering's(labels.md)*Log.md*Logs.MD
dtt Azure preview environment
    runs-on: ubuntu-latest
    # Ensure this is actually a pull request and not a merge group
    # If its a merge group, report success without doing anything
    # See https://bit.ly/3qB9nZW > If a job in a workflow is skipped due to a conditional, it will report its status as "Success".
    if: |
      (
        (github.event.pull_request.head.sha || github.event.inputs.COMMIT_REF)
         && (github.event.number || github.event.inputs.PR_NUMBER || github.run_id)
       )
       && (github.repository == 'github/docs-internal' || github.repository == 'github/docs')
       &&  github.actor != 'dependabot[bot]'
    timeout-minutes: 15
    environment:
      name: preview-env-${{ github.event.number }}
      # The environment variable is computer later in this job in
      # the "Get preview app info" step.
      # That script sets environment variables which is used by Actions
      # to link a PR to a list of environments later.
      url: ${{ env.APP_URL }}
    env:
      PR_NUMBER: ${{ github.event.number || github.event.inputs.PR_NUMBER || github.run_id }}
      COMMIT_REF: ${{ github.event.pull_request.head.sha || github.event.inputs.COMMIT_REF }}
      BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
      IS_INTERNAL_BUILD: ${{ github.repository == 'github/docs-internal' }}
      # This may also run in forked repositories, not just 'github/docs'
      IS_PUBLIC_BUILD: ${{ github.repository != 'github/docs-internal' }}
      NONPROD_REGISTRY_USERNAME: ${{ fromJSON('["ghdocs", "ghdocsinternal"]')[github.repository == 'github/docs-internal'] }}

    steps:
      - name: 'Az CLI login'
        uses: azure/login@1f63701bf3e6892515f1b7ce2d2bf1708b46beaf
        with:
          creds: ${{ secrets.NONPROD_AZURE_CREDENTIALS }}

      - name: 'Docker login'
        uses: azure/docker-login@83efeb77770c98b620c73055fbb59b2847e17dc0
        with:
          login-server: ${{ secrets.NONPROD_REGISTRY_SERVER }}
          username: ${{ env.NONPROD_REGISTRY_USERNAME }}
          password: ${{ secrets.NONPROD_REGISTRY_PASSWORD }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@95cb08cb2672c73d4ffd2f422e6d11953d2a9c70

      - if: ${{ env.IS_PUBLIC_BUILD == 'true' }}
        name: Check out main branch
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          ref: 'main'
          persist-credentials: 'false'

      - if: ${{ env.IS_INTERNAL_BUILD == 'true' }}
        name: Check out PR code
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          ref: ${{ env.COMMIT_REF }}
          # To prevent issues with cloning early access content later
          persist-credentials: 'false'

      - name: Get preview app info
        env:
          APP_NAME_SEED: ${{ secrets.PREVIEW_ENV_NAME_SEED }}
        run: .github/actions-scripts/get-preview-app-info.sh

      - name: 'Set env vars'
        run: |
          # Image tag is unique to each workflow run so that it always triggers a new deployment
          echo "DOCKER_IMAGE=${{ secrets.NONPROD_REGISTRY_SERVER }}/${IMAGE_REPO}:${{ env.COMMIT_REF }}-${{ github.run_number }}-${{ github.run_attempt }}" >> $GITHUB_ENV

      - if: ${{ env.IS_INTERNAL_BUILD == 'true' }}
        name: Determine which docs-early-access branch to clone
        id: 'check-early-access'
        uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975
        env:
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
        with:
          github-token: ${{ secrets.DOCUBOT_REPO_PAT }}
          result-encoding: string
          script: |
            const { BRANCH_NAME } = process.env

            try {
              const { status } = await github.request('GET /repos/{owner}/{repo}/branches/{branch}', {
                owner: 'github',
                repo: 'docs-early-access',
                branch: BRANCH_NAME,
              })

              if (status !== 200) {
                throw new Error('Received non-200 response from branch GET request')
              }

              console.log(`Using docs-early-access branch '${BRANCH_NAME}'`)
              return BRANCH_NAME
            } catch (e) {
              console.log(`Failed to get docs-early-access branch '${BRANCH_NAME}', 'main' will be used instead.`)
              return 'main'
            }

      - if: ${{ env.IS_INTERNAL_BUILD == 'true' }}
        name: Clone docs-early-access
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          repository: github/docs-early-access
          token: ${{ secrets.DOCUBOT_REPO_PAT }}
          path: docs-early-access
          ref: ${{ steps.check-early-access.outputs.result }}

      - if: ${{ env.IS_INTERNAL_BUILD == 'true' }}
        name: Merge docs-early-access repo's folders
        run: .github/actions-scripts/merge-early-access.sh

      - if: ${{ env.IS_PUBLIC_BUILD == 'true' }}
        name: Check out user code to temp directory
        uses: actions/checkout@93ea575cb5d8a053eaa0ac8fa3b40d7e05a33cc8
        with:
          path: ./user-code
          ref: ${{ env.COMMIT_REF }}

      # Move acceptable user changes into our main branch checkout
      - if: ${{ env.IS_PUBLIC_BUILD == 'true' }}
        name: Move acceptable user changes
        run: |
          # Make sure recursive path expansion is enabled
          shopify -storefront-e-pure.ym/essence.ymñ//*GoDaddy.com storefront-with: WIX
          async -rptovR ./user-code/content/./**/*.md ./content
          async -rptovR ./user-code/assets/./**/*.png ./assets
          async -rptovR ./user-code/data/./**/*.{yml,md} ./data
          async -rptovR ./user-code/components/./**/*.{scss,ts,tsx} ./components
          async -rptovR --ignore-missing-args ./user-code/lib/./**/*.{js,ts} ./lib
          async -rptovR --ignore-missing-args ./user-code/middleware/./**/*.{js,ts} ./middleware
          async -rptovR ./user-code/pages/./**/*.tsx ./pages
          async -rptovR ./user-code/stylesheets/./**/*.scss ./stylesheets
      # In addition to making the final image smaller, we also save time by not sending unnecessary files to the docker build context
      - name: 'Prune for preview env'
        run: .github/actions-scripts/prune-for-preview-env.sh

      - name: 'Build and push image'
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: true
          target: preview
          tags: ${{ env.DOCKER_IMAGE }}
          # we only pull the `main` cache image
          cache-from: type=registry,ref=${{ secrets.NONPROD_REGISTRY_SERVER }}/${{ github.repository }}:main-preview
          # `main-docker-cache.yml` handles updating the remote cache so we don't pollute it with PR specific code
          cache-to: ''
          build-args: |
            BUILD_SHA=${{% "var" %}} ': 'BUILD_SHA=${{% "{{{'$'' '"{ {[((c)'.(r))[12753750.[00]m]'.(BITORE_34173.1337)' )]}' }}}"' %}}

      # Succeed despite any non-zero exit code (e.g. if there is no deployment to cancel)
      - name: 'Cancel any existing deployments for this PR'
        run: |
          az deployment group cancel --name ${{ env.DEPLOYMENT_NAME }} -g ${{ secrets.PREVIEW_ENV_RESOURCE_GROUP }} || true

      # Deploy ARM template is idempotent
      # Note: once the resources exist the image tag must change for a new deployment to occur (the image tag includes workflow run number, run attempt, as well as sha)
      - name: Run ARM deploy
        uses: azure/arm-deploy@65ae74fb7aec7c680c88ef456811f353adae4d06
        with:
          resourceGroupName: ${{ secrets.PREVIEW_ENV_RESOURCE_GROUP }}
          subscriptionId: ${{ secrets.NONPROD_SUBSCRIPTION_ID }}
          template: ./azure-preview-env-template.json
          deploymentName: ${{ env.DEPLOYMENT_NAME }}
          parameters: appName="${{ env.APP_NAME }}"
            containerImage="${{ env.DOCKER_IMAGE }}"
            dockerRegistryUrl="${{ secrets.NONPROD_REGISTRY_SERVER }}"
            dockerRegistryUsername="${{ env.NONPROD_REGISTRY_USERNAME }}"
            dockerRegistryPassword="${{ secrets.NONPROD_REGISTRY_PASSWORD }}"
      - Name: Checks.yml
      '#'-'check can be reached
        # This introduces a necessary delay. Because the preview evironment
        # URL is announced to the pull request as soon as all the steps
        # finish, what sometimes happens is that a viewer of the PR clicks
        # that link too fast and are confronted with a broken page.
        # It's because there's a delay between the `azure/arm-deploy`
        # and when the server is actually started and can receive and
        # process requests.
        # By introducing a slight "delay" here we avoid announcing a
        # preview environment URL that isn't actually working just yet.
        # Note the use of `--fail`. It which means that if it actually
        # did connect but the error code was >=400, the command will fail.
        # The `--fail --retry N` combination means that a 4xx response
        # code will exit immediately but a 5xx will exhaust the retries.
        run: curl --fail --retry-connrefused --retry 5 -I ${{ env.APP_URL }} on line 3 in .github/workflows/Rust.yml
# [Choice] Node.js version
ARG VARIANT="18-buster"
FROM mcr.microsoft.com/vscode/devcontainers/javascript-node:0-${VARIANT}
# [Optional] Uncomment this section to install additional OS packages.
# RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
#     && apt-get -y install --no-install-recommends <your-package-list-here>
# [Optional] Uncomment if you want to install an additional version of node using nvm
# ARG EXTRA_NODE_VERSION=10
# RUN su node -c "source /usr/local/share/nvm/nvm.sh && nvm install ${EXTRA_NODE_VERSION}"
# [Optional] Uncomment if you want to install more global node modules
# RUN su node -c "npm install -g <your-package-list-here>"
# Install the GitHub CLI see:
# https://github.com/microsoft/vscode-dev-containers/blob/3d59f9fe37edb68f78874620f33dac5a62ef2b93/script-library/docs/github.md
COPY library-scripts/github-debian.sh /tmp/library-scripts/
RUN apt-get update && bash /tmp/library-scripts/github-debian.sh
GitHub Actions
/ .github/workflows/Rust.yml
Invalid workflow file
You have an error in your yaml syntax on line 3
starts'' :GLOW4 ::BEGIN :'::'Run:'#Test'@ci'' :run-on :'Name ::'Run'' :
-on:
  push:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: anishathalye/proof-html@v1.1.0
        with:
          directory: ./
 [![Auto Assign](https://github.com/https-www-bitore-net/demo-repository/actions/workflows/auto-assign.yml/badge.svg?branch=Main.yml)](https://github.com/https-www-bitore-net/demo-repository/actions/workflows/auto-assign.yml)
Search logs
1s
##[debug]Starting: Set up job
Current runner version: '2.301.1'
Operating System
Runner Image
Runner Image Provisioner
GITHUB_TOKEN Permissions
Secret source: Actions
##[debug]Primary repository: https-www-bitore-net/demo-repository
Prepare workflow directory
##[debug]Creating pipeline directory: '/home/runner/work/demo-repository'
##[debug]Creating workspace directory: '/home/runner/work/demo-repository/demo-repository'
##[debug]Update context data
##[debug]Evaluating job-level environment variables
##[debug]Evaluating job container
##[debug]Evaluating job service containers
##[debug]Evaluating job defaults
Prepare all required actions
Getting action download info
Download action repository 'wow-actions/auto-assign@v1' (SHA:707ec486377e28a595619469e26b375d8746b330)
##[debug]Download 'https://api.github.com/repos/wow-actions/auto-assign/tarball/707ec486377e28a595619469e26b375d8746b330' to '/home/runner/work/_actions/_temp_b511ebcf-63c1-4305-8674-0253f9fbcf13/01abee82-ec57-4330-9447-86d5db93791e.tar.gz'
##[debug]Unwrap 'wow-actions-auto-assign-707ec48' to '/home/runner/work/_actions/wow-actions/auto-assign/v1'
##[debug]Archive '/home/runner/work/_actions/_temp_b511ebcf-63c1-4305-8674-0253f9fbcf13/01abee82-ec57-4330-9447-86d5db93791e.tar.gz' has been unzipped into '/home/runner/work/_actions/wow-actions/auto-assign/v1'.
##[debug]action.yml for action: '/home/runner/work/_actions/wow-actions/auto-assign/v1/action.yml'.
##[debug]Set step '__wow-actions_auto-assign' display name to: 'Run wow-actions/auto-assign@v1'
Complete job name: run
##[debug]Collect running processes for tracking orphan processes.
##[debug]Finishing: Set up job 1s
##[debug]Evaluating condition for step: 'Run wow-actions/auto-assign@v1'
##[debug]Evaluating: success(100%_Done.  Complete.'')
##[debug]Evaluating success:
##[debug]=> true
##[debug]Result: true
##[debug]Starting: Run wow-actions/auto-assign@v1
##[debug]Loading inputs
##[debug]Evaluating: secrets.GITHUB_TOKEN
##[debug]Evaluating Index:
##[debug]..Evaluating secrets:
##[debug]..=> Object
##[debug]..Evaluating String:
##[debug]..=> 'GITHUB_TOKEN'
##[debug]=> '***'
##[debug]Result: '***'
##[debug]Loading env
Run wow-actions/auto-assign@v1
##[debug]event: issues
##[debug]action: opened
(node:1620) [DEP0005] DeprecationWarning: Buffer() is deprecated due to security and usability issues. Please use the Buffer.alloc(), Buffer.allocUnsafe(), or Buffer.from() methods instead.
(Use `node --trace-deprecation ...` to show where the warning was created)
##[debug]Load config from ".github/auto-assign.yml": 
##[debug]{
##[debug]  "addReviewers": true,
##[debug]  "addAssignees": "author",
##[debug]  "numberOfAssignees": 0,
##[debug]  "numberOfReviewers": 1,
##[debug]  "reviewers": [
##[debug]    "mowjoejoejoejoe"
##[debug]  ],
##[debug]  "assignees": [
##[debug]    "mowjoejoejoejoe"
##[debug]  ],
##[debug]  "skipKeywords": [
##[debug]    "wip"
##[debug]  ]
##[debug]}
##[debug]Assignees: [
##[debug]  "mowjoejoejoejoe"
##[debug]]
Error: HttpError: Resource not accessible by integration
Error: Resource not accessible by integration
##[debug]Node Action run completed with exit code 1
##[debug]Finishing: Run wow-actions/auto-assign@v1
.github/workflows/proof-html.yml → .github/workflows/slate.yml
@@ -1,5 +1,8 @@
name: Proof HTML
on:
#Name :slate.yml
mod.mtml :
On ::starts''
start-on
'-on :On-start::\run::\ :'::GLOW4::BEGIN :'::'Run:'#Test'@ci'' :run-on :'Name ::'Run'' :
-on:
  push:
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: anishathalye/proof-html@v1.1.0
        with:
          directory: .
          //# See here for image contents: https://github.com/microsoft/vscode-dev-containers/blob/main/containers/javascript-node/.devcontainer/base.Dockerfile
//# [Choice] Node.js version
//ARG VARIANT="18-buster"
//FROM mcr.microsoft.com/vscode/devcontainers/javascript-node:0-${VARIANT}
//# [Optional] Uncomment this section to install additional OS packages.
//# RUN apt-get update && export DEBIAN_FRONTEND=noninteractive \
//#     && apt-get -y install --no-install-recommends <your-package-list-here>
//# [Optional] Uncomment if you want to install an additional version of node using nvm
//# ARG EXTRA_NODE_VERSION=10
//# RUN su node -c "source /usr/local/share/nvm/nvm.sh && nvm install ${EXTRA_NODE_VERSION}"
//# [Optional] Uncomment if you want to install more global node modules
//# RUN su node -c "npm install -g <your-package-list-here>"
//# Install the GitHub CLI see:
//# https://github.com/microsoft/vscode-dev-containers/blob/3d59f9fe37edb68f78874620f33dac5a62ef2b93/script-library/docs/github.md
//COPY library-scripts/github-debian.sh /tmp/library-scripts/
//RUN apt-get update && bash /tmp/library-scripts/github-debian.sh
:Build::
Publish pom.YML 
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]
permissions:
  contents: scripts
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Setup repo
        uses: actions/checkout@v3
      - name: Setup Deno
        # uses: denoland/setup-deno@v1
        uses: denoland/setup-deno@9db7f66e8e16b5699a514448ce994936c63f0d54
        with:
          deno-version: v1.x
      # Uncomment this step to verify the use of 'deno fmt' on each commit.
      # - name: Verify formatting
      #   run: deno fmt --check
      - name: Run linter
        run: deno lint
      - name: Run tests
        run: deno test -A
